# Prefacio
Tal vez no sabes muy bien porqué estás leyendo este pequeño libro sobre CoffeeScript, antes de nada piensa en este libro como un regalo que te ofrezco, no espero nada a cambio, únicamente que disfrutes con su lectura tanto como yo he disfrutado con su redacción.

Te preguntarás por qué he decidido escribir un libro en castellano sobre CoffeeScript, y no sobre JavaScript como muchos esperaban que hiciera. Razones tengo muchas pero la principal es que tal vez sea el lenguaje con el que más me he divertido mientras lo descubría y el que más me ha ayudado a mejorar mis capacidades como mejor desarrollador web. No te puedes hacer una idea lo que ha supuesto CoffeeScript para mi y por lo tanto para la empresa que fundé, [Tapquo](http://tapquo). Quiero contarte mis inicios con este maravilloso lenguaje y tambien su propia genesís, comencemos.

La primera vez que escuché de CoffeeScript fue gracias a mi amigo [Guillermo Pascual](http://twitter.com/pasku1) cuando en Septiembre del 2011 estabamos en la primera oficina de Tapquo desarrollando, y refactorizando, lo que iba a ser la primera versión de [LungoJS](http://lungo.tapquo.com). Al principio no le presté mucha atención a CoffeeScript, pretendía ser mejor programador en JavaScript y *Lungo* iba a ser mi primer gran exponente, tenia puesto el *Focus* y no debía dispersarme con eso que nos gusta tanto a los *Developers*; aprender un nuevo lenguaje.

Fue en Junio del 2012, una vez que Lungo ya era estable y yo ya dominaba JavaScript como pretendía, cuando dediqué mi tiempo a CoffeeScript. Comencé leyendo varios libros, tampoco había muchos más, los cuales me han ayudado a escribir el libro que estas ahora leyendo. Enseguida obtuve el *Flow* con el lenguaje, ya que como proscrito *Rubista* y actual adorador de [Python](https://en.wikipedia.org/wiki/Python_(programming_language)),  tanto la sintaxis como las estructuras me resultaban muy familiares. Tanto es así que en dos semanas de estudio me decidí a crear un *micro* Framework MVC, [Monocle](http://monocle.tapquo.com), el cual intentaba aprovechar lo mejor de CoffeeScript y que actualmente además de usarlo activamente en nuestros locos días de oficina lo usan miles de desarrolladores por todo el mundo.

Solo me queda pedirte una cosa, ¡diviertete!, diviertete aprendiendo este lenguaje lleno de buenas intenciones y de alguna que otra sorpresa.


## JavaScript, El lenguaje *padre*
Si recibiese un BitCoin por cada vez que oigo que JavaScript no es un gran lenguaje ahora mismo tendría un buen puñado de monedas virtuales en mi bolsillo. JavaScript nunca ha sido, ni será, el lenguaje de programación más utilizado y más famoso del mundo, para eso tenemos a C o Java. Voy a ponerte en contexto, fue desarrollado en apenas 10 días por el genio [Brendan Eich](https://en.wikipedia.org/wiki/Brendan_Eich) con la única premisa: tener una sintaxis muy parecida al lenguaje C, y esa es la unica similitud con el lenguaje C. Como rezan algunos *"cualquier parecido con la realidad es pura casualidad"* y es por eso que desde sus inicios el nombre ha generado muchas equivocaciones, confundiendolo con una versión ligera de Java para la web.

Lo que es seguro es que desde sus inicios en 1995 JavaScript ha seguido en constante evolución:

+ **1995** Primera versión
+ **1998** ECMA-262 1st + 2nd edition
+ **2000** ECMA-262 3rd edition
+ ...
+ **2005** AJAX, Array Extras, string generics... (v1.5)
+ **2006** Iterators, Pythonic generators... (v1.6)
+ **2008** Generator expressions, expression closures, JSON support...(v1.7-v1.8)
+ ...
+ **2010** EcmaScript5 (v1.8.2)
+ ...
+ **2014** EcmaScript6

El gran problema que ha tenido JavaScript es que la forma de desarrollar nunca ha sido comprendida ni para los desarrolladores de la vieja escuela (C, Java...), que se quejaban de la falta de clases y demás singularidades de la OOP, ni para los que solo han trabajado con lenguajes modernos (Python, Ruby, Haskell...), que maldecían la *verbosidad barroca*, con las conocidas llaves, paréntesis y puntos y comas. Por lo tanto siempre ha sido criticado y en mi opinión siempre lo será. Como todos los lenguajes, JavaScript tiene defectos, pero poco a poco y con cada nueva revisión se va puliendo y mejorando. 

En este libro vamos a acercarnos a JavaScript por medio de CoffeeScript, pretendo que seas mejor desarrollador JavaScript de lo que has sido hasta ahora. Mi propósito es que respetes al *Lenguaje Padre* y que puedas enfrentarte a proyectos con las suficientes lineas de código que asuste al mejor de los *Gurus* de [jQuery](http://jquery.com) (sarcasmo).


## CoffeeScript, El hijo *bastardo*
CoffeeScript es un lenguaje de programación el cual es capaz de compilar su resultado a JavaScript, es *unicamente* eso. Está totalmente inspirado en la sintaxis de lenguajes como Ruby, Python y Haskell para capacitar a JavaScript de una expresividad y brevedad que por si solo no tiene. Tus programas en JavaScript se escribirán con menos lineas de CoffeeScript, mas o menos una proporción 1/3, sin tener ninguna perdida de rendimiento (incluso a veces la mejora).

Su autor es [Jeremy Ashkenas](https://en.wikipedia.org/wiki/Jeremy_Ashkenas) y comenzó con el proyecto el 13 de Diciembre del 2009 con un misterioso e intrigante comentario en su primer commit en GitHub `"initial commit of the mystery language"`. Comenzó creando el compilador en Ruby pero en apenas 3 meses cambio de idea e hizo que el compilador estuviese escrito con su propio lenguaje, CoffeeScript. El proyecto pronto fue seguido por multitud de desarrolladores en [GitHub](https://github.com/jashkenas/coffee-script), donde tanto Jeremy como el resto de contribuyentes añadían nuevas características cada mes.

Después de publicarse la versión 1.0 en navidades del 2010, CoffeeScript se convirtió en uno de los proyectos más seguidos en GitHub. El lenguaje volvió a tener un empujón en la escena web, cuando en Abril del 2011 [David Heinemeier Hansson](https://en.wikipedia.org/wiki/David_Heinemeier_Hansson) confirmó los rumores que decían que CoffeeScript iba a estar incluido en la versión 3.1 de Ruby on Rails.

Y yo me pregunto ¿como puede ser que un lenguaje tan pequeño haya captado tanto interés? Tres razones me vienen a la mente: divertido, seguro y fácil de leer.


## Un libro por el mundo
Este libro fue escrito durante mi viaje por Tailandia, en los meses de Noviembre y Diciembre del año 2013. Decidí irme a 12.000km de mi lugar de residencia para centrarme en el libro y poder dar lo mejor de mi en él. Uno de mis propósitos en la vida es ofrecer mi conocimiento a todo aquel que quiera adquirirlo y esta es una buena manera de hacerlo. Ahora tú tienes que ayudarme a regalar este libro a tus amigos, no te ha costado nada y no te costará nada hacerlo.

Mi próximo libro tratará sobre [EcmaScript 6](https://en.wikipedia.org/wiki/ECMAScript) y lo escribiré en Nueva Zelanda, por lo que si después de leer este libro te ha gustado tanto como para hacer una [donación](leanpub.com/coffeescript), financiando así parte del viaje y próximo libro, te estaré eternamente agradecido.